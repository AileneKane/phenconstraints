getwd()
getwd()
5/51
## housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
# dostan = TRUE
library(lme4)
library(rstan)
library(ggplot2)
library(shinystan)
library(bayesplot)
library(rstanarm)
#update.packages()
if(length(grep("ailene", getwd()))>0) {setwd("/Users/aileneettinger/git/radcliffe")}
#Goal: Fit a multimodel to phenology (budburst) data with temperature, soil moisture, and
#their interaction as explanatory variables.
#
#Step 1: Fit the model with test data to make sure that the model can recover parameters accurately
###set up data
n_sp=50#number of species
obs_sp=30#number of obs (plots, years) per species
N=n_sp*obs_sp#sample size
sp<-rep(seq(1:n_sp), each=obs_sp)#species ids
#set up distribution parameters
mu_a<-150#grand mean mean of bb doy
sigma_a<-5
mu_b_temp_sp<--2
sigma_b_temp_sp<-.1
mu_b_mois_sp<--1
sigma_b_mois_sp<-.1
a_sp<-as.integer(rnorm(n_sp,mu_a,sigma_a))#species specific day of year for bb
b_temp<-rnorm(n_sp,mu_b_temp_sp,sigma_b_temp_sp)#species specific effects of temp
b_mois<-rnorm(n_sp,mu_b_mois_sp,sigma_b_mois_sp)#species specific effects of mois
#create explanatory variables
#try using centered predictors
temp<-rep(NA, N)
for(i in 1:n_sp){
temp[which(sp==i)]<-rnorm(obs_sp,0,1)#right now this is set up for each species but it doesn't need to be right?
}
mois<-rep(NA, N)
for(i in 1:n_sp){
mois[which(sp==i)]<-rnorm(obs_sp,0,2)#we tried having the mean at ~25 for temp and mois, but rhat was bad and model had trouble... mean=5 was ok...
}
#model without interaction
sigma_y<-.5
#generate the response variable, ypred
ypred<-c()
for(i in 1:N){
ypred[i] = a_sp[sp[i]] + b_temp[sp[i]] * temp[i] + b_mois[sp[i]] * mois[i]
}
y<-rnorm(N,ypred,sigma_y)
#check that test data look ok
plot(temp,y)
plot(mois,y)
hist(mois)
#try model in lmer
testm1.lmer<-lmer(y~temp + mois +(1|sp))
summary(testm1.lmer)#looks good!
testm1 = stan('Analyses/soilmoisture/M1_bbd_testdata.stan', data=list(y=y,sp=sp,temp=temp, mois=mois, n_sp=n_sp,N=N),
iter = 2500, warmup=1500) #
ypred<-c()
for(i in 1:N){
ypred[i] = a_sp[sp[i]] + b_temp[sp[i]] * temp[i] + b_mois[sp[i]] * mois[i]+ b_tm[sp[i]]*temp[i] * mois[i]
}
mu_b_tm_sp<--.1
sigma_b_tm_sp<-.005
b_tm<-rnorm(n_sp,mu_b_tm_sp,sigma_b_tm_sp)#species specific interaction
ypred<-c()
for(i in 1:N){
ypred[i] = a_sp[sp[i]] + b_temp[sp[i]] * temp[i] + b_mois[sp[i]] * mois[i]+ b_tm[sp[i]]*temp[i] * mois[i]
}
#try model in lmer
testm3.lmer<-lmer(y~temp * mois +(temp*mois|sp))#
summary(testm3.lmer)#fixed effects look pretty good
testm3_ncp = stan('Analyses/soilmoisture/M3_bbd_testdata_ncp.stan', data=list(y=y,sp=sp,temp=temp, mois=mois,n_sp=n_sp,N=N),
iter = 4000) # this is not working for some reason...
#now fit the model in stan
testm3 = stan('Analyses/soilmoisture/M3_bbd_testdata.stan', data=list(y=y,sp=sp,temp=temp, mois=mois,n_sp=n_sp,N=N),
iter = 5000, warmup=3500,control=list(adapt_delta=.95)) # there were divergent transitions. looked at bivariate plots, and problem parameter seems to be sigma_tm. sigma_temp also was a bit weird
#Analyses and figures for Sally's Phenology data
#forced slope models (Hyp1) and resampling approach (Hyp2) suggested by Jonathan
#code started october 5, 2017 based on lizzie and jonathan's resampling code
#data collection occured during the 2015 growing season at Arnold ARboretum, for Sally Gee's thesis data
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
# Set working directory:
if(length(grep("Lizzie", getwd())>0)) {setwd("~/Documents/git/projects/misc/phenconstraints")} else if
(length(grep("ailene", getwd()))>0) {setwd("/Users/aileneettinger/git/phenconstraints")
}
#load libraries
library(RColorBrewer)
#Read in data:
dat2<-read.csv("analyses/output/growingseason_doy2.csv", header = T)
#calculate start of each phase and interphase durations:
source("analyses/source/phase_start_and_inter_species.R")
#########################################
####Hypothesis 1: forced slope models####
#########################################
#Fit models with a forced slope of 1 through the data (only the intercept can move)
#Write a loop to fit model, get interepts, r2, and p vals for all
#make vectors of all prev phases (x variables) and later phases (y variables)
phases=as.data.frame(cbind(fLDstartm,fLOstartm,fFLstartm,fRFRstartm,fSENstartm))
colnames(phases)<-c("LDstartm","LOstartm","FLstartm","RFRstartm","SENstartm")
prev_phase_col=c(1,2,3,4)
late_phase_col=c(2,3,4,5)
prevphaselab<-c("Budburst DOY","Leafout DOY","Flowering DOY","Fruiting DOY")
latephaselab<-c("Leafout DOY","Flowering DOY","Fruiting DOY","Senescence DOY")
##Fit 10 models and Make plots of Later vs. Earlier phases, with forced slope model
#Rsquared values are weird in some cases becuase model fit is worse than mean (intercept only) model...some are negative (e.g. -6.11)
#could use AIC instead to compare fit...or ????
cols <- colorRampPalette(brewer.pal(9,"YlOrRd"))(25)#yellow to red with later flowering dates
fspecies<-names(fFLstartm)
fspecies_num<-c(1:25)
#make blank dataframe for model results
prephase<-latephase<-int<-rse<-rsq<-pvals<-c()
quartz(height=7, width=7)#this sets the dimensions of the plotting window
par(mfrow=c(4,4),mai=c(.2,.2,.2,.01), omi=c(.6,.6,.2,.2))#same thing but adding some measurements for margins within individual plots (may) and outside margins for the whole window (omi)
for (i in 1:length(late_phase_col)){
y=phases[,late_phase_col[i]]
for(j in 1:i){
x=phases[,j]
forceBmod <- lm(y ~ 1 + offset(1*x)) # Force a slope of 1 through the data
Intmod <- lm(y ~ 1 ) # fit only intercept
Bmod <- lm(y ~ -1+x ) # fit only slope
regmod <- lm(y ~ x ) # fit standard regression
yhat <- predict(forceBmod)
ss_tot <- sum((y - mean(y))^2)
ss_res <- sum((y - yhat)^2)
print(Rsq <- 1 - (ss_res / ss_tot))
p<-round(anova(forceBmod,regmod)$Pr[2], digits=3)
latephase<-c(latephase,colnames(phases)[late_phase_col[i]])
prephase<-c(prephase,colnames(phases)[prev_phase_col[j]])
plot(x,y, ylab = paste(latephaselab[i]), xlab = paste(prevphaselab[j]),pch=21,bg=cols[fspecies_num], bty="l", xaxt='n', yaxt='n')
axis(side=1,labels=FALSE)
axis(side=2,labels=FALSE)
abline(a=forceBmod$coef,b=1, lty=2, col="Red")
rsq.regmod<-summary(regmod)$r.squared
p.regmod<-summary(regmod)$coeff[2,4]
if(p.regmod<0.05){
abline(a=regmod$coef[1],b=regmod$coef[2], lty=1)
mtext(paste("=",round(summary(regmod)$r.squared, digits=2),", p=",round(summary(regmod)$coeff[2,4],digits=3)), side=3, line=-.5, cex=.6, adj=1.2)
mtext(expression( "r" ^ italic("2")), side=3, line=-.5, cex=.6, adj=.2) # works
}
if(i==1 & j==1){
axis(side=2,labels=TRUE)
mtext("Leafout DOY", side=2, cex=.7, line=2, adj=.5)
plot.new();plot.new();plot.new();
legend("top",legend=fspecies,pch=21,pt.bg=cols[fspecies_num], bty="n", cex=1.1)}
if(i==2 & j==1){axis(side=2,labels=TRUE)
mtext("Flowering DOY", side=2, cex=.7, line=2, adj=.5)
mtext("Later phenological event", side=2, cex=.9, line=4, adj=.5)}
if(i==2 & j==2){plot.new();plot.new()}
if(i==3 & j==1){axis(side=2,labels=TRUE)
mtext("Fruiting DOY", side=2, cex=.7, line=2, adj=.5)}
if(i==3 & j==3){plot(c(seq(1:25)),c(seq(1:25)), col="white",ylab = "", xlab = "",bty="n",xaxt='n', yaxt='n')}
if(i==4 & j==1){
axis(side=2,labels=TRUE)
mtext("Senescence DOY", side=2, cex=.7, line=2, adj=.5)
mtext("Budburst DOY", side=1, cex=.7, line=2, adj=.5)
axis(side=1,labels=TRUE)
}
if(i==4 & j==2){
axis(side=1,labels=TRUE)
mtext("Leafout DOY", side=1, cex=.7, line=2, adj=.5)
mtext("Previous phenological event", side=1, cex=.9, line=3, adj=.5)
}
if(i==4 & j==3){
axis(side=1,labels=TRUE)
mtext("Flowering DOY", side=1, cex=.7, line=2, adj=.5)}
if(i==4 & j==4){axis(side=1,labels=TRUE)
mtext("Fruting DOY", side=1, cex=.7, line=2, adj=.5)}
int<-c(int,summary(forceBmod)$coef[1])
rse<-c(rse,summary(forceBmod)$sigma)
rsq<-c(rsq,Rsq)
pvals<-c(pvals,p)
print(colnames(phases)[late_phase_col[i]]); print(colnames(phases)[prev_phase_col[j]])
print(AIC(forceBmod,Intmod,Bmod,regmod)); print(Rsq)
}
}
rsq
p
quartz(height=7, width=7)#this sets the dimensions of the plotting window
par(mfrow=c(4,4),mai=c(.2,.2,.2,.01), omi=c(.6,.6,.2,.2))#same thing but adding some measurements for margins within individual plots (may) and outside margins for the whole window (omi)
for (i in 1:length(late_phase_col)){
y=phases[,late_phase_col[i]]
for(j in 1:i){
x=phases[,j]
forceBmod <- lm(y ~ 1 + offset(1*x)) # Force a slope of 1 through the data
Intmod <- lm(y ~ 1 ) # fit only intercept
Bmod <- lm(y ~ -1+x ) # fit only slope
regmod <- lm(y ~ x ) # fit standard regression
yhat <- predict(forceBmod)
ss_tot <- sum((y - mean(y))^2)
ss_res <- sum((y - yhat)^2)
print(Rsq <- 1 - (ss_res / ss_tot))
p<-round(anova(forceBmod,regmod)$Pr[2], digits=3)
latephase<-c(latephase,colnames(phases)[late_phase_col[i]])
prephase<-c(prephase,colnames(phases)[prev_phase_col[j]])
plot(x,y, ylab = paste(latephaselab[i]), xlab = paste(prevphaselab[j]),pch=21,bg=cols[fspecies_num], bty="l", xaxt='n', yaxt='n')
axis(side=1,labels=FALSE)
axis(side=2,labels=FALSE)
abline(a=forceBmod$coef,b=1, lty=2, col="Red")
rsq.regmod<-summary(regmod)$r.squared
p.regmod<-summary(regmod)$coeff[2,4]
if(p.regmod<0.05){
abline(a=regmod$coef[1],b=regmod$coef[2], lty=1)
mtext(paste("=",round(summary(regmod)$r.squared, digits=2),", p=",round(summary(regmod)$coeff[2,4],digits=3)), side=3, line=-.5, cex=.6, adj=1.2)
mtext(expression( "r" ^ italic("2")), side=3, line=-.5, cex=.6, adj=.2) # works
}
if(i==1 & j==1){
axis(side=2,labels=TRUE)
mtext("Leafout DOY", side=2, cex=.7, line=2, adj=.5)
plot.new();plot.new();plot.new();
legend("top",legend=fspecies,pch=21,pt.bg=cols[fspecies_num], bty="n", cex=1.1)}
if(i==2 & j==1){axis(side=2,labels=TRUE)
mtext("Flowering DOY", side=2, cex=.7, line=2, adj=.5)
mtext("Later phenological event", side=2, cex=.9, line=4, adj=.5)}
if(i==2 & j==2){plot.new();plot.new()}
if(i==3 & j==1){axis(side=2,labels=TRUE)
mtext("Fruiting DOY", side=2, cex=.7, line=2, adj=.5)}
if(i==3 & j==3){plot(c(seq(1:25)),c(seq(1:25)), col="white",ylab = "", xlab = "",bty="n",xaxt='n', yaxt='n')}
if(i==4 & j==1){
axis(side=2,labels=TRUE)
mtext("Senescence DOY", side=2, cex=.7, line=2, adj=.5)
mtext("Budburst DOY", side=1, cex=.7, line=2, adj=.5)
axis(side=1,labels=TRUE)
}
if(i==4 & j==2){
axis(side=1,labels=TRUE)
mtext("Leafout DOY", side=1, cex=.7, line=2, adj=.5)
mtext("Previous phenological event", side=1, cex=.9, line=3, adj=.5)
}
if(i==4 & j==3){
axis(side=1,labels=TRUE)
mtext("Flowering DOY", side=1, cex=.7, line=2, adj=.5)}
if(i==4 & j==4){axis(side=1,labels=TRUE)
mtext("Fruting DOY", side=1, cex=.7, line=2, adj=.5)}
int<-c(int,summary(forceBmod)$coef[1])
rse<-c(rse,summary(forceBmod)$sigma)
rsq<-c(rsq,Rsq)
pvals<-c(pvals,p)
print(colnames(phases)[late_phase_col[i]]); print(colnames(phases)[prev_phase_col[j]])
print(AIC(forceBmod,regmod)); print(Rsq);; print(p)
}
}
quartz(height=7, width=7)#this sets the dimensions of the plotting window
par(mfrow=c(4,4),mai=c(.2,.2,.2,.01), omi=c(.6,.6,.2,.2))#same thing but adding some measurements for margins within individual plots (may) and outside margins for the whole window (omi)
for (i in 1:length(late_phase_col)){
y=phases[,late_phase_col[i]]
for(j in 1:i){
x=phases[,j]
forceBmod <- lm(y ~ 1 + offset(1*x)) # Force a slope of 1 through the data
Intmod <- lm(y ~ 1 ) # fit only intercept
Bmod <- lm(y ~ -1+x ) # fit only slope
regmod <- lm(y ~ x ) # fit standard regression
yhat <- predict(forceBmod)
ss_tot <- sum((y - mean(y))^2)
ss_res <- sum((y - yhat)^2)
#print(Rsq <- 1 - (ss_res / ss_tot))
p<-round(anova(forceBmod,regmod)$Pr[2], digits=3)
latephase<-c(latephase,colnames(phases)[late_phase_col[i]])
prephase<-c(prephase,colnames(phases)[prev_phase_col[j]])
plot(x,y, ylab = paste(latephaselab[i]), xlab = paste(prevphaselab[j]),pch=21,bg=cols[fspecies_num], bty="l", xaxt='n', yaxt='n')
axis(side=1,labels=FALSE)
axis(side=2,labels=FALSE)
abline(a=forceBmod$coef,b=1, lty=2, col="Red")
rsq.regmod<-summary(regmod)$r.squared
p.regmod<-summary(regmod)$coeff[2,4]
if(p.regmod<0.05){
abline(a=regmod$coef[1],b=regmod$coef[2], lty=1)
mtext(paste("=",round(summary(regmod)$r.squared, digits=2),", p=",round(summary(regmod)$coeff[2,4],digits=3)), side=3, line=-.5, cex=.6, adj=1.2)
mtext(expression( "r" ^ italic("2")), side=3, line=-.5, cex=.6, adj=.2) # works
}
if(i==1 & j==1){
axis(side=2,labels=TRUE)
mtext("Leafout DOY", side=2, cex=.7, line=2, adj=.5)
plot.new();plot.new();plot.new();
legend("top",legend=fspecies,pch=21,pt.bg=cols[fspecies_num], bty="n", cex=1.1)}
if(i==2 & j==1){axis(side=2,labels=TRUE)
mtext("Flowering DOY", side=2, cex=.7, line=2, adj=.5)
mtext("Later phenological event", side=2, cex=.9, line=4, adj=.5)}
if(i==2 & j==2){plot.new();plot.new()}
if(i==3 & j==1){axis(side=2,labels=TRUE)
mtext("Fruiting DOY", side=2, cex=.7, line=2, adj=.5)}
if(i==3 & j==3){plot(c(seq(1:25)),c(seq(1:25)), col="white",ylab = "", xlab = "",bty="n",xaxt='n', yaxt='n')}
if(i==4 & j==1){
axis(side=2,labels=TRUE)
mtext("Senescence DOY", side=2, cex=.7, line=2, adj=.5)
mtext("Budburst DOY", side=1, cex=.7, line=2, adj=.5)
axis(side=1,labels=TRUE)
}
if(i==4 & j==2){
axis(side=1,labels=TRUE)
mtext("Leafout DOY", side=1, cex=.7, line=2, adj=.5)
mtext("Previous phenological event", side=1, cex=.9, line=3, adj=.5)
}
if(i==4 & j==3){
axis(side=1,labels=TRUE)
mtext("Flowering DOY", side=1, cex=.7, line=2, adj=.5)}
if(i==4 & j==4){axis(side=1,labels=TRUE)
mtext("Fruting DOY", side=1, cex=.7, line=2, adj=.5)}
int<-c(int,summary(forceBmod)$coef[1])
rse<-c(rse,summary(forceBmod)$sigma)
rsq<-c(rsq,Rsq)
pvals<-c(pvals,p)
print(colnames(phases)[late_phase_col[i]]); print(colnames(phases)[prev_phase_col[j]])
print(AIC(forceBmod,regmod)); print(Rsq);; print(p)
}
}
quartz(height=7, width=7)#this sets the dimensions of the plotting window
par(mfrow=c(4,4),mai=c(.2,.2,.2,.01), omi=c(.6,.6,.2,.2))#same thing but adding some measurements for margins within individual plots (may) and outside margins for the whole window (omi)
for (i in 1:length(late_phase_col)){
y=phases[,late_phase_col[i]]
for(j in 1:i){
x=phases[,j]
forceBmod <- lm(y ~ 1 + offset(1*x)) # Force a slope of 1 through the data
Intmod <- lm(y ~ 1 ) # fit only intercept
Bmod <- lm(y ~ -1+x ) # fit only slope
regmod <- lm(y ~ x ) # fit standard regression
yhat <- predict(forceBmod)
ss_tot <- sum((y - mean(y))^2)
ss_res <- sum((y - yhat)^2)
Rsq <- 1 - (ss_res / ss_tot)
p<-round(anova(forceBmod,regmod)$Pr[2], digits=3)
latephase<-c(latephase,colnames(phases)[late_phase_col[i]])
prephase<-c(prephase,colnames(phases)[prev_phase_col[j]])
plot(x,y, ylab = paste(latephaselab[i]), xlab = paste(prevphaselab[j]),pch=21,bg=cols[fspecies_num], bty="l", xaxt='n', yaxt='n')
axis(side=1,labels=FALSE)
axis(side=2,labels=FALSE)
abline(a=forceBmod$coef,b=1, lty=2, col="Red")
rsq.regmod<-summary(regmod)$r.squared
p.regmod<-summary(regmod)$coeff[2,4]
if(p.regmod<0.05){
abline(a=regmod$coef[1],b=regmod$coef[2], lty=1)
mtext(paste("=",round(summary(regmod)$r.squared, digits=2),", p=",round(summary(regmod)$coeff[2,4],digits=3)), side=3, line=-.5, cex=.6, adj=1.2)
mtext(expression( "r" ^ italic("2")), side=3, line=-.5, cex=.6, adj=.2) # works
}
if(i==1 & j==1){
axis(side=2,labels=TRUE)
mtext("Leafout DOY", side=2, cex=.7, line=2, adj=.5)
plot.new();plot.new();plot.new();
legend("top",legend=fspecies,pch=21,pt.bg=cols[fspecies_num], bty="n", cex=1.1)}
if(i==2 & j==1){axis(side=2,labels=TRUE)
mtext("Flowering DOY", side=2, cex=.7, line=2, adj=.5)
mtext("Later phenological event", side=2, cex=.9, line=4, adj=.5)}
if(i==2 & j==2){plot.new();plot.new()}
if(i==3 & j==1){axis(side=2,labels=TRUE)
mtext("Fruiting DOY", side=2, cex=.7, line=2, adj=.5)}
if(i==3 & j==3){plot(c(seq(1:25)),c(seq(1:25)), col="white",ylab = "", xlab = "",bty="n",xaxt='n', yaxt='n')}
if(i==4 & j==1){
axis(side=2,labels=TRUE)
mtext("Senescence DOY", side=2, cex=.7, line=2, adj=.5)
mtext("Budburst DOY", side=1, cex=.7, line=2, adj=.5)
axis(side=1,labels=TRUE)
}
if(i==4 & j==2){
axis(side=1,labels=TRUE)
mtext("Leafout DOY", side=1, cex=.7, line=2, adj=.5)
mtext("Previous phenological event", side=1, cex=.9, line=3, adj=.5)
}
if(i==4 & j==3){
axis(side=1,labels=TRUE)
mtext("Flowering DOY", side=1, cex=.7, line=2, adj=.5)}
if(i==4 & j==4){axis(side=1,labels=TRUE)
mtext("Fruting DOY", side=1, cex=.7, line=2, adj=.5)}
int<-c(int,summary(forceBmod)$coef[1])
rse<-c(rse,summary(forceBmod)$sigma)
rsq<-c(rsq,Rsq)
pvals<-c(pvals,p)
print(colnames(phases)[late_phase_col[i]]); print(colnames(phases)[prev_phase_col[j]])
print(AIC(forceBmod,regmod)); print(Rsq);print(p)
}
}
if(length(grep("Lizzie", getwd())>0)) {setwd("~/Documents/git/projects/misc/phenconstraints")} else if
(length(grep("ailene", getwd()))>0) {setwd("/Users/aileneettinger/git/phenconstraints")
}
#load libraries
library(RColorBrewer)
#Read in data:
dat2<-read.csv("analyses/output/growingseason_doy2.csv", header = T)
#calculate start of each phase and interphase durations:
source("analyses/source/phase_start_and_inter_species.R")
#########################################
####Hypothesis 1: forced slope models####
#########################################
#Fit models with a forced slope of 1 through the data (only the intercept can move)
#Write a loop to fit model, get interepts, r2, and p vals for all
#make vectors of all prev phases (x variables) and later phases (y variables)
phases=as.data.frame(cbind(fLDstartm,fLOstartm,fFLstartm,fRFRstartm,fSENstartm))
phases
max(phases$fRFRstartm)
